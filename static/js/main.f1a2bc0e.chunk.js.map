{"version":3,"sources":["components/movie-block/movie-block.js","components/movie-block/index.js","services/movies-service.js","components/movie-page/index.js","components/movie-page/movie-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["calculateBorderColor","vote","ratio","green","red","MovieBlock","data","img","title","date","overview","className","src","alt","dateObj","Date","formatWithOptions","locale","enUS","dateToString","formatDate","style","borderColor","txt","symbol","i","cutedTxt","slice","isDeletedAllUncompletedWords","length","cutOverview","allowHalf","count","defaultValue","character","StarFilled","fontSize","MoviesService","apiKey","url","urlImageDB","query","updateDataFn","String","fetch","URL","this","then","responce","json","results","moviesData","map","el","id","release_date","poster_path","vote_average","MoviePage","moviesService","state","movieBlocksData","updateData","newData","setState","getMovies","movieBlocks","movieData","key","React","Component","App","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1a2bc0e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-block.css';\nimport { formatWithOptions } from 'date-fns/fp';\nimport { enUS } from 'date-fns/locale';\nimport { Tag, Rate } from 'antd';\nimport { StarFilled } from '@ant-design/icons';\n\nfunction formatDate(date) {\n  const dateObj = new Date(date);\n  const dateToString = formatWithOptions({ locale: enUS }, 'MMMM d, yyyy');\n\n  return dateToString(dateObj);\n}\n\nfunction isLetterOrDigit(symbol) {\n  const isLowerLetter = symbol >= 'a' && symbol <= 'z';\n  const isUpperLetter = symbol >= 'A' && symbol <= 'Z';\n  const isDigitSymbol = symbol >= '0' && symbol <= '9';\n\n  return isLowerLetter || isUpperLetter || isDigitSymbol;\n}\n\nfunction cutOverview(txt) {\n  let i = 225;\n  let cutedTxt = txt.slice(0, i);\n  let isDeletedAllUncompletedWords = false;\n\n  while (!isDeletedAllUncompletedWords) {\n    if (isLetterOrDigit(cutedTxt[i - 1])) {\n      i -= 1;\n    } else {\n      isDeletedAllUncompletedWords = true;\n    }\n  }\n\n  cutedTxt = cutedTxt.slice(0, i);\n\n  return cutedTxt + (txt.length !== cutedTxt.length ? '...' : '');\n}\n\nfunction calculateBorderColor(vote) {\n  const MAX_VOTE = 10;\n  const MAX_SATURATE = 255;\n\n  const ratio = vote / MAX_VOTE;\n\n  let green = MAX_SATURATE;\n  let red = 0;\n\n  if (ratio < 0.7) {\n    red = MAX_SATURATE;\n  }\n\n  if (ratio <= 0.35) {\n    green = 0;\n  }\n\n  return `rgb(${red}, ${green}, 0)`;\n}\n\nexport default function MovieBlock({ data }) {\n  const { img, title, date, overview, vote } = data;\n\n  return (\n    <div className=\"movie-block\">\n      <div className=\"movie-poster\">\n        <div className=\"movie-poster__img-wrapper\">\n          <img src={img} alt=\"\" />\n        </div>\n      </div>\n      <div className=\"movie-description\">\n        <div className=\"col-1\">\n          <div className=\"description-img-wrapper\">\n            <img src={img} alt=\"\" />\n          </div>\n          <div className=\"main-info-wrapper\">\n            <div className=\"title\">{title}</div>\n            <div className=\"date\">{formatDate(date)}</div>\n            <div className=\"tags\">\n              <Tag>Action</Tag>\n              <Tag>Drama</Tag>\n            </div>\n          </div>\n          <div className=\"vote\" style={{ borderColor: calculateBorderColor(vote) }}>\n            {vote}\n          </div>\n        </div>\n        <div className=\"col-2\">\n          <span className=\"overview\">{cutOverview(overview)}</span>\n        </div>\n        <div className=\"col-3\">\n          <Rate\n            allowHalf\n            count={10}\n            defaultValue={5}\n            character={<StarFilled style={{ fontSize: '16px' }} />}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMovieBlock.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    vote: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import MovieBlock from './movie-block';\n\nexport default MovieBlock;\n","export default class MoviesService {\n  apiKey = '639828d50e7b3c39e3270402fcde3061';\n\n  url = 'https://api.themoviedb.org/3';\n\n  urlImageDB = 'https://image.tmdb.org/t/p/w500';\n\n  getMovies(query, updateDataFn) {\n    if ((typeof query === 'string' || query instanceof String) && query.length > 0) {\n      fetch(new URL(`${this.url}/search/movie?api_key=${this.apiKey}&query=${query}`))\n        .then((responce) => responce.json())\n        .then((json) => json.results)\n        .then((results) => {\n          const moviesData = results.map((el) => {\n            const movieData = {\n              id: el.id,\n              title: el.title,\n              overview: el.overview,\n              date: el.release_date,\n              img: this.urlImageDB + el.poster_path,\n              vote: `${el.vote_average}`,\n            };\n\n            return movieData;\n          });\n\n          updateDataFn(moviesData);\n        });\n    }\n  }\n}\n","import MoviePage from './movie-page';\n\nexport default MoviePage;\n","import React from 'react';\nimport './movie-page.css';\nimport MovieBlock from '../movie-block';\nimport MoviesService from '../../services/movies-service';\n\nexport default class MoviePage extends React.Component {\n  moviesService = new MoviesService();\n\n  state = {\n    movieBlocksData: [],\n  };\n\n  constructor() {\n    super();\n\n    this.moviesService.getMovies('return', this.updateData);\n  }\n\n  updateData = (newData) => {\n    this.setState({ movieBlocksData: newData });\n  };\n\n  render() {\n    const { movieBlocksData } = this.state;\n\n    const movieBlocks = movieBlocksData.map((el) => {\n      const { id, ...movieData } = el;\n\n      return <MovieBlock key={id} data={movieData} />;\n    });\n\n    return <div className=\"movie-page\">{movieBlocks}</div>;\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport 'normalize.css';\nimport './app.css';\nimport 'antd/dist/antd.css';\nimport MoviePage from '../movie-page';\n\nexport default class App extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"main-wrapper\">\n        <MoviePage />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}