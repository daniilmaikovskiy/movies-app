{"version":3,"sources":["components/movie-block/movie-block.js","components/movie-block/index.js","services/movies-service.js","components/movie-page/index.js","components/movie-page/movie-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["calculateBorderColor","vote","ratio","green","red","Vote","value","className","style","borderColor","MoviePoster","img","image","src","alt","MovieBlock","data","title","date","overview","dateObj","Date","formatWithOptions","locale","enUS","dateToString","formatDate","txt","symbol","i","cutedTxt","slice","isDeletedAllUncompletedWords","length","cutOverview","allowHalf","count","defaultValue","character","StarFilled","fontSize","MoviesService","fnGet","fnLoading","fnError","apiKey","url","urlImageDB","timerId","delay","debounce","fn","debounceTime","args","clearTimeout","this","setTimeout","apply","debouncedGetMoviesFn","query","page","fetch","createSearchMoviesURL","then","responce","json","results","totalPages","total_pages","moviesData","map","el","poster_path","id","release_date","vote_average","catch","error","message","searchUrl","encodedQuery","encodeURIComponent","String","MoviePage","moviesService","newData","newTotalPages","setState","movieBlocksData","loading","errorMessage","state","switchKeys","onChangePage","getMovies","onChangeQuery","target","trimLeft","onClickMenu","evt","key","MoviePagination","total","onChange","size","pageSize","showSizeChanger","text","marginTop","marginBottom","description","type","showIcon","tip","movieData","onClick","selectedKeys","mode","Item","placeholder","React","Component","App","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3882aac9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-block.css';\nimport { formatWithOptions } from 'date-fns/fp';\nimport { enUS } from 'date-fns/locale';\nimport { Tag, Rate, Empty } from 'antd';\nimport { StarFilled } from '@ant-design/icons';\n\nfunction formatDate(date) {\n  try {\n    const dateObj = new Date(date);\n    const dateToString = formatWithOptions({ locale: enUS }, 'MMMM d, yyyy');\n\n    return dateToString(dateObj);\n  } catch {\n    return date;\n  }\n}\n\nfunction isLetterOrDigit(symbol) {\n  const isLowerLetter = symbol >= 'a' && symbol <= 'z';\n  const isUpperLetter = symbol >= 'A' && symbol <= 'Z';\n  const isDigitSymbol = symbol >= '0' && symbol <= '9';\n\n  return isLowerLetter || isUpperLetter || isDigitSymbol;\n}\n\nfunction cutOverview(txt) {\n  let i = 225;\n  let cutedTxt = txt.slice(0, i);\n  let isDeletedAllUncompletedWords = false;\n\n  while (!isDeletedAllUncompletedWords) {\n    if (isLetterOrDigit(cutedTxt[i - 1])) {\n      i -= 1;\n    } else {\n      isDeletedAllUncompletedWords = true;\n    }\n  }\n\n  cutedTxt = cutedTxt.slice(0, i);\n\n  return cutedTxt + (txt.length !== cutedTxt.length ? '...' : '');\n}\n\nfunction calculateBorderColor(vote) {\n  const MAX_VOTE = 10;\n  const MAX_SATURATE = 255;\n\n  const ratio = vote / MAX_VOTE;\n\n  let green = MAX_SATURATE;\n  let red = 0;\n\n  if (ratio < 0.7) {\n    red = MAX_SATURATE;\n  }\n\n  if (ratio <= 0.35) {\n    green = 0;\n  }\n\n  return `rgb(${red}, ${green}, 0)`;\n}\n\nfunction Vote({ value }) {\n  if (value === '' || value === '0') {\n    return null;\n  }\n\n  return (\n    <div className=\"vote\" style={{ borderColor: calculateBorderColor(value) }}>\n      {value}\n    </div>\n  );\n}\n\nVote.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nfunction MoviePoster({ img }) {\n  const image = img === '' ? <Empty /> : <img src={img} alt=\"\" />;\n\n  return (\n    <div className=\"movie-poster\">\n      <div className=\"movie-poster__img-wrapper\">{image}</div>\n    </div>\n  );\n}\n\nMoviePoster.propTypes = {\n  img: PropTypes.string.isRequired,\n};\n\nexport default function MovieBlock({ data }) {\n  const { img, title, date, overview, vote } = data;\n\n  return (\n    <div className=\"movie-block\">\n      <MoviePoster img={img} />\n      <div className=\"movie-description\">\n        <div className=\"col-1\">\n          <div className=\"description-img-wrapper\">\n            <img src={img} alt=\"\" />\n          </div>\n          <div className=\"main-info-wrapper\">\n            <div className=\"title\">{title}</div>\n            <div className=\"date\">{formatDate(date)}</div>\n            <div className=\"tags\">\n              <Tag>Action</Tag>\n              <Tag>Drama</Tag>\n            </div>\n          </div>\n          <Vote value={vote} />\n        </div>\n        <div className=\"col-2\">\n          <span className=\"overview\">{cutOverview(overview)}</span>\n        </div>\n        <div className=\"col-3\">\n          <Rate\n            allowHalf\n            count={10}\n            defaultValue={5}\n            character={<StarFilled style={{ fontSize: '14px' }} />}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMovieBlock.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    vote: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import MovieBlock from './movie-block';\n\nexport default MovieBlock;\n","export default class MoviesService {\n  apiKey = '639828d50e7b3c39e3270402fcde3061';\n\n  url = 'https://api.themoviedb.org/3';\n\n  urlImageDB = 'https://image.tmdb.org/t/p/w500';\n\n  timerId = null;\n\n  delay = 300;\n\n  debounce = (fn, debounceTime) => {\n    return function (...args) {\n      clearTimeout(this.timerId);\n\n      this.timerId = setTimeout(() => {\n        fn.apply(this, args);\n      }, debounceTime);\n    };\n  };\n\n  constructor(fnGet, fnLoading, fnError) {\n    this.fnGet = fnGet;\n    this.fnLoading = fnLoading;\n    this.fnError = fnError;\n  }\n\n  createSearchMoviesURL(query, page) {\n    const searchUrl = `${this.url}/search/movie?api_key=${this.apiKey}`;\n    const encodedQuery = encodeURIComponent(query);\n    const url = `${searchUrl}&query=${encodedQuery}&page=${page}`;\n\n    return url;\n  }\n\n  debouncedGetMoviesFn = this.debounce((query, page) => {\n    fetch(this.createSearchMoviesURL(query, page))\n      .then((responce) => responce.json())\n      .then(({ results, total_pages: totalPages }) => {\n        const moviesData = results.map((el) => {\n          const img = el.poster_path == null ? '' : this.urlImageDB + el.poster_path;\n\n          const movieData = {\n            id: el.id,\n            title: el.title,\n            overview: el.overview,\n            date: el.release_date,\n            img,\n            vote: `${el.vote_average}`,\n          };\n\n          return movieData;\n        });\n\n        this.fnGet(moviesData, totalPages);\n      })\n      .catch((error) => this.fnError(error.message));\n  }, this.delay);\n\n  getMovies(query, page = 1) {\n    if ((typeof query === 'string' || query instanceof String) && query.length > 0) {\n      this.fnLoading();\n      this.debouncedGetMoviesFn(query, page);\n    } else {\n      clearTimeout(this.timerId);\n      this.fnGet([], 0);\n    }\n  }\n}\n","import MoviePage from './movie-page';\n\nexport default MoviePage;\n","import React from 'react';\nimport './movie-page.css';\nimport { Pagination, Menu, Empty, Spin, Alert } from 'antd';\nimport MovieBlock from '../movie-block';\nimport MoviesService from '../../services/movies-service';\n\nexport default class MoviePage extends React.Component {\n  moviesService = new MoviesService(\n    (newData, newTotalPages) => {\n      this.setState({\n        movieBlocksData: newData,\n        totalPages: newTotalPages,\n        loading: false,\n      });\n    },\n    () => {\n      this.setState({\n        loading: true,\n      });\n    },\n    (error) => {\n      this.setState({\n        error: true,\n        errorMessage: error,\n      });\n    }\n  );\n\n  state = {\n    movieBlocksData: [],\n    totalPages: 0,\n    query: '',\n    switchKeys: ['search'],\n    loading: false,\n    error: false,\n    errorMessage: '',\n  };\n\n  onChangePage = (page) => {\n    const { query } = this.state;\n\n    if (page > 0) {\n      this.moviesService.getMovies(query, page);\n    }\n  };\n\n  onChangeQuery = ({ target }) => {\n    const query = target.value.trimLeft();\n\n    this.setState({ query });\n    this.moviesService.getMovies(query);\n  };\n\n  onClickMenu = (evt) => {\n    this.setState({ switchKeys: [evt.key] });\n  };\n\n  MoviePagination = ({ total, onChange }) => {\n    if (total === 0) {\n      return null;\n    }\n\n    return (\n      <Pagination\n        size=\"small\"\n        pageSize=\"1\"\n        total={total}\n        showSizeChanger={false}\n        onChange={onChange}\n        className=\"movie-pagination\"\n      />\n    );\n  };\n\n  getMovies = () => {\n    const { movieBlocksData, loading, error, errorMessage } = this.state;\n\n    if (error) {\n      const text = errorMessage === 'Failed to fetch' ? 'No internet connection' : 'Server error';\n\n      return (\n        <Alert\n          style={{ marginTop: '50px', marginBottom: '100px' }}\n          message=\"Error:\"\n          description={text}\n          type=\"error\"\n          showIcon\n        />\n      );\n    }\n\n    if (loading) {\n      return <Spin tip=\"loading...\" style={{ marginTop: '60px', marginBottom: '100px' }} />;\n    }\n\n    const isEmpty = !movieBlocksData.length;\n\n    if (isEmpty) {\n      return <Empty style={{ marginTop: '60px', marginBottom: '100px' }} />;\n    }\n\n    const movieBlocks = movieBlocksData.map((el) => {\n      const { id, ...movieData } = el;\n\n      return <MovieBlock key={id} data={movieData} />;\n    });\n\n    return movieBlocks;\n  };\n\n  render() {\n    const { totalPages, query, switchKeys } = this.state;\n    const { onChangePage, onChangeQuery, MoviePagination, onClickMenu, getMovies } = this;\n\n    return (\n      <div className=\"movie-page\">\n        <div className=\"switch\">\n          <Menu onClick={onClickMenu} selectedKeys={switchKeys} mode=\"horizontal\">\n            <Menu.Item key=\"search\">Search</Menu.Item>\n            <Menu.Item key=\"rated\">Rated</Menu.Item>\n          </Menu>\n        </div>\n        <input\n          type=\"search\"\n          className=\"movie-search\"\n          placeholder=\"Type to search...\"\n          onChange={onChangeQuery}\n          value={query}\n        />\n        <div className=\"movies\">{getMovies()}</div>\n        <MoviePagination total={totalPages} onChange={onChangePage} />\n      </div>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport 'normalize.css';\nimport './app.css';\nimport 'antd/dist/antd.css';\nimport MoviePage from '../movie-page';\n\nexport default class App extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"main-wrapper\">\n        <MoviePage />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}