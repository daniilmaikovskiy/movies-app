{"version":3,"sources":["components/page-controller/index.js","components/page-controller/page-controller.js","components/genre-list-context/genre-list-context.js","components/movie-block/movie-block.js","components/movie-block/index.js","components/movies/movies.js","components/movies/index.js","components/movie-page-search/index.js","components/movie-page-search/movie-page-search.js","components/movie-page-rated/index.js","components/movie-page-rated/movie-page-rated.js","components/movies-service-context/movies-service-context.js","components/movie-page/index.js","components/movie-page/movie-page.js","services/movies-service.js","components/app/index.js","components/app/app.js","index.js"],"names":["PageController","total","onChange","current","size","pageSize","showSizeChanger","className","React","createContext","GenreListProvider","Provider","GenreListConsumer","Consumer","Vote","vote","value","MoviePoster","img","image","src","alt","Genres","genreList","genreIds","reduce","acc","id","genre","get","push","key","MovieBlock","data","rateMovie","title","date","overview","rating","dateObj","Date","formatWithOptions","locale","enUS","dateToString","formatDate","txt","symbol","i","cutedTxt","slice","isDeletedAllUncompletedWords","length","cutOverview","allowHalf","count","defaultValue","character","StarFilled","Movies","movieBlocksData","loading","error","errorMessage","text","style","marginTop","marginBottom","message","description","type","showIcon","tip","map","el","movieData","getMovies","defaultProps","MoviePageSearch","state","totalPages","query","page","debouncedMoviesServiceGetMovies","debounce","prevState","props","setState","then","catch","onChangePage","onChangeQuery","target","trimLeft","prevProps","this","placeholder","Component","MoviePageRated","getRatedMovies","MoviesServiceProvider","MoviesServiceConsumer","MoviePage","switchKeys","onClickMenu","evt","getHideClassByName","name","some","guestSessionId","onClick","selectedKeys","mode","Item","MoviesService","apiKey","url","urlImageDB","createSearchMoviesURL","searchUrl","encodedQuery","encodeURIComponent","prepareMoviesJson","results","total_pages","poster_path","release_date","vote_average","genre_ids","a","String","fetch","responce","json","createGuestSession","response","guest_session_id","rateUrl","method","headers","body","JSON","stringify","Number","getGenreList","App","moviesService","Promise","all","genres","set","Map","content","spin","errorAlert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4224f635.chunk.js","sourcesContent":["import PageController from './page-controller';\n\nexport default PageController;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './page-controller.css';\nimport { Pagination } from 'antd';\n\nexport default function PageController({ total, onChange, current }) {\n  if (total === 0) {\n    return null;\n  }\n\n  return (\n    <Pagination\n      size=\"small\"\n      pageSize=\"1\"\n      total={total}\n      showSizeChanger={false}\n      onChange={onChange}\n      current={current}\n      className=\"page-controller\"\n    />\n  );\n}\n\nPageController.propTypes = {\n  total: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  current: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nconst { Provider: GenreListProvider, Consumer: GenreListConsumer } = React.createContext();\n\nexport { GenreListProvider, GenreListConsumer };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-block.css';\nimport { formatWithOptions } from 'date-fns/fp';\nimport { enUS } from 'date-fns/locale';\nimport { Tag, Rate, Empty } from 'antd';\nimport { StarFilled } from '@ant-design/icons';\nimport { GenreListConsumer } from '../genre-list-context';\n\nfunction formatDate(date) {\n  try {\n    const dateObj = new Date(date);\n    const dateToString = formatWithOptions({ locale: enUS }, 'MMMM d, yyyy');\n\n    return dateToString(dateObj);\n  } catch {\n    return date;\n  }\n}\n\nfunction isLetterOrDigit(symbol) {\n  const isLowerLetter = symbol >= 'a' && symbol <= 'z';\n  const isUpperLetter = symbol >= 'A' && symbol <= 'Z';\n  const isDigitSymbol = symbol >= '0' && symbol <= '9';\n\n  return isLowerLetter || isUpperLetter || isDigitSymbol;\n}\n\nfunction cutOverview(txt) {\n  let i = 225;\n  let cutedTxt = txt.slice(0, i);\n  let isDeletedAllUncompletedWords = false;\n\n  while (!isDeletedAllUncompletedWords) {\n    if (isLetterOrDigit(cutedTxt[i - 1])) {\n      i -= 1;\n    } else {\n      isDeletedAllUncompletedWords = true;\n    }\n  }\n\n  cutedTxt = cutedTxt.slice(0, i);\n\n  return cutedTxt + (txt.length !== cutedTxt.length ? '...' : '');\n}\n\nfunction getBorderColorClass(vote) {\n  if (vote > 7) {\n    return 'vote-higher-7';\n  }\n  if (vote > 5) {\n    return 'vote-higher-5';\n  }\n  if (vote > 3) {\n    return 'vote-higher-3';\n  }\n\n  return 'vote-lower-3';\n}\n\nfunction Vote({ value }) {\n  if (value === '' || value === '0') {\n    return null;\n  }\n\n  return <div className={`vote ${getBorderColorClass(value)}`}>{value}</div>;\n}\n\nVote.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nfunction MoviePoster({ img }) {\n  const image = img === '' ? <Empty /> : <img src={img} alt=\"\" />;\n\n  return (\n    <div className=\"movie-poster\">\n      <div className=\"movie-poster__img-wrapper\">{image}</div>\n    </div>\n  );\n}\n\nMoviePoster.propTypes = {\n  img: PropTypes.string.isRequired,\n};\n\nfunction Genres({ genreList, genreIds }) {\n  const getTags = () => {\n    return genreIds.reduce((acc, id) => {\n      const genre = genreList.get(id);\n\n      if (genre) {\n        acc.push(<Tag key={id}>{genre}</Tag>);\n      }\n\n      return acc;\n    }, []);\n  };\n\n  return <div className=\"tags\">{getTags()}</div>;\n}\n\nGenres.propTypes = {\n  genreList: PropTypes.objectOf(Map).isRequired,\n  genreIds: PropTypes.arrayOf(Number).isRequired,\n};\n\nexport default function MovieBlock({ data, rateMovie }) {\n  const { img, title, date, overview, vote, rating, genreIds } = data;\n\n  return (\n    <div className=\"movie-block\">\n      <MoviePoster img={img} />\n      <div className=\"movie-description\">\n        <div className=\"col-1\">\n          <div className=\"description-img-wrapper\">\n            <img src={img} alt=\"\" />\n          </div>\n          <div className=\"main-info-wrapper\">\n            <div className=\"title\">{title}</div>\n            <div className=\"date\">{formatDate(date)}</div>\n            <GenreListConsumer>\n              {(genreList) => <Genres genreList={genreList} genreIds={genreIds} />}\n            </GenreListConsumer>\n          </div>\n          <Vote value={vote} />\n        </div>\n        <div className=\"col-2\">\n          <span className=\"overview\">{cutOverview(overview)}</span>\n        </div>\n        <div className=\"col-3\">\n          <Rate\n            allowHalf\n            count={10}\n            defaultValue={typeof rating === 'number' ? rating : 0}\n            character={<StarFilled className=\"star-filled\" />}\n            onChange={rateMovie}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMovieBlock.propTypes = {\n  rateMovie: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    vote: PropTypes.string.isRequired,\n    genreIds: PropTypes.arrayOf(Number).isRequired,\n    rating: PropTypes.number,\n  }).isRequired,\n};\n","import MovieBlock from './movie-block';\n\nexport default MovieBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movies.css';\nimport { Empty, Spin, Alert } from 'antd';\nimport MovieBlock from '../movie-block';\n\nexport default function Movies({ movieBlocksData, loading, error, errorMessage, rateMovie }) {\n  const getMovies = () => {\n    if (error) {\n      const text = errorMessage === 'Failed to fetch' ? 'No internet connection' : 'Server error';\n\n      return (\n        <Alert\n          style={{ marginTop: '50px', marginBottom: '100px' }}\n          message=\"Error:\"\n          description={text}\n          type=\"error\"\n          showIcon\n        />\n      );\n    }\n\n    if (loading) {\n      return <Spin tip=\"loading...\" style={{ marginTop: '60px', marginBottom: '100px' }} />;\n    }\n\n    if (!movieBlocksData.length) {\n      return <Empty style={{ marginTop: '60px', marginBottom: '100px' }} />;\n    }\n\n    return movieBlocksData.map((el) => {\n      const { id, ...movieData } = el;\n\n      return (\n        <MovieBlock\n          key={id}\n          data={movieData}\n          rateMovie={(vote) => {\n            rateMovie(id, vote);\n          }}\n        />\n      );\n    });\n  };\n\n  return <div className=\"movies\">{getMovies()}</div>;\n}\n\nMovies.defaultProps = {\n  movieBlocksData: [],\n  loading: false,\n  error: false,\n  errorMessage: '',\n  rateMovie: () => {},\n};\n\nMovies.propTypes = {\n  movieBlocksData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      img: PropTypes.string.isRequired,\n      vote: PropTypes.string.isRequired,\n      rating: PropTypes.number,\n    })\n  ),\n  loading: PropTypes.bool,\n  error: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  rateMovie: PropTypes.func,\n};\n","import Movies from './movies';\n\nexport default Movies;\n","import MoviePageSearch from './movie-page-search';\n\nexport default MoviePageSearch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-page-search.css';\nimport { debounce } from 'lodash';\nimport PageController from '../page-controller';\nimport Movies from '../movies';\n\nexport default class MoviePageSearch extends React.Component {\n  state = {\n    movieBlocksData: [],\n    totalPages: 0,\n    query: '',\n    page: 1,\n    loading: false,\n    error: false,\n    errorMessage: '',\n  };\n\n  debouncedMoviesServiceGetMovies = debounce((prevState) => {\n    const { query, page } = this.state;\n    const { getMovies } = this.props;\n\n    if (prevState.query !== query || prevState.page !== page) {\n      this.setState({ loading: true });\n\n      getMovies(query, page)\n        .then(({ movieBlocksData, totalPages }) => {\n          this.setState({\n            movieBlocksData,\n            totalPages,\n            loading: false,\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            error: true,\n            errorMessage: error.message,\n          });\n        });\n    }\n  }, 500);\n\n  componentDidUpdate(prevProps, prevState) {\n    this.debouncedMoviesServiceGetMovies(prevState);\n  }\n\n  onChangePage = (page) => {\n    if (page > 0) {\n      this.setState({ page });\n    }\n  };\n\n  onChangeQuery = ({ target }) => {\n    const query = target.value.trimLeft();\n\n    this.setState({ query, page: 1 });\n  };\n\n  render() {\n    const { totalPages, query, page, movieBlocksData, loading, error, errorMessage } = this.state;\n    const { onChangeQuery, onChangePage } = this;\n    const { className, rateMovie } = this.props;\n\n    return (\n      <div className={`movie-page-search ${className}`}>\n        <input\n          type=\"search\"\n          className=\"movie-search\"\n          placeholder=\"Type to search...\"\n          onChange={onChangeQuery}\n          value={query}\n        />\n        <Movies\n          movieBlocksData={movieBlocksData}\n          loading={loading}\n          error={error}\n          errorMessage={errorMessage}\n          rateMovie={rateMovie}\n        />\n        <PageController total={totalPages} onChange={onChangePage} current={page} />\n      </div>\n    );\n  }\n}\n\nMoviePageSearch.propTypes = {\n  getMovies: PropTypes.func.isRequired,\n  rateMovie: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired,\n};\n","import MoviePageRated from './movie-page-rated';\n\nexport default MoviePageRated;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-page-rated.css';\nimport Movies from '../movies';\n\nexport default class MoviePageRated extends React.Component {\n  state = {\n    movieBlocksData: [],\n    loading: true,\n    error: false,\n    errorMessage: '',\n  };\n\n  componentDidUpdate(prevProps) {\n    const { getRatedMovies, className } = this.props;\n\n    if (prevProps.className !== className) {\n      getRatedMovies()\n        .then(({ movieBlocksData }) =>\n          this.setState({\n            loading: false,\n            error: false,\n            movieBlocksData,\n          })\n        )\n        .catch((error) =>\n          this.setState({\n            error: true,\n            errorMessage: error.message,\n          })\n        );\n    }\n  }\n\n  render() {\n    const { className, rateMovie } = this.props;\n    const { movieBlocksData, loading, error, errorMessage } = this.state;\n\n    return (\n      <div className={`movie-page-rated ${className}`}>\n        <Movies\n          movieBlocksData={movieBlocksData}\n          loading={loading}\n          error={error}\n          errorMessage={errorMessage}\n          rateMovie={rateMovie}\n        />\n      </div>\n    );\n  }\n}\n\nMoviePageRated.propTypes = {\n  className: PropTypes.string.isRequired,\n  getRatedMovies: PropTypes.func.isRequired,\n  rateMovie: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nconst { Provider: MoviesServiceProvider, Consumer: MoviesServiceConsumer } = React.createContext();\n\nexport { MoviesServiceProvider, MoviesServiceConsumer };\n","import MoviePage from './movie-page';\n\nexport default MoviePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-page.css';\nimport { Menu } from 'antd';\nimport MoviePageSearch from '../movie-page-search';\nimport MoviePageRated from '../movie-page-rated';\nimport { MoviesServiceConsumer } from '../movies-service-context';\n\nexport default class MoviePage extends React.Component {\n  state = {\n    switchKeys: ['search'],\n  };\n\n  onClickMenu = (evt) => {\n    this.setState({ switchKeys: [evt.key] });\n  };\n\n  getHideClassByName = (name) => {\n    const { switchKeys } = this.state;\n    const isVisible = switchKeys.some((el) => el === name);\n\n    return isVisible ? '' : 'hidden';\n  };\n\n  render() {\n    const { guestSessionId } = this.props;\n    const { switchKeys } = this.state;\n    const { onClickMenu, getHideClassByName } = this;\n\n    return (\n      <div className=\"movie-page\">\n        <div className=\"switch\">\n          <Menu onClick={onClickMenu} selectedKeys={switchKeys} mode=\"horizontal\">\n            <Menu.Item key=\"search\">Search</Menu.Item>\n            <Menu.Item key=\"rated\">Rated</Menu.Item>\n          </Menu>\n        </div>\n        <MoviesServiceConsumer>\n          {({ getMovies, rateMovie, getRatedMovies }) => {\n            return (\n              <>\n                <MoviePageSearch\n                  className={getHideClassByName('search')}\n                  getMovies={getMovies}\n                  rateMovie={(id, vote) => rateMovie(guestSessionId, id, vote)}\n                />\n                <MoviePageRated\n                  className={getHideClassByName('rated')}\n                  rateMovie={(id, vote) => rateMovie(guestSessionId, id, vote)}\n                  getRatedMovies={() => getRatedMovies(guestSessionId)}\n                />\n              </>\n            );\n          }}\n        </MoviesServiceConsumer>\n      </div>\n    );\n  }\n}\n\nMoviePage.propTypes = {\n  guestSessionId: PropTypes.string.isRequired,\n};\n","export default class MoviesService {\n  apiKey = '639828d50e7b3c39e3270402fcde3061';\n\n  url = 'https://api.themoviedb.org/3';\n\n  urlImageDB = 'https://image.tmdb.org/t/p/w500';\n\n  createSearchMoviesURL = (query, page) => {\n    const searchUrl = `${this.url}/search/movie?api_key=${this.apiKey}`;\n    const encodedQuery = encodeURIComponent(query);\n    const url = `${searchUrl}&query=${encodedQuery}&page=${page}`;\n\n    return url;\n  };\n\n  prepareMoviesJson = ({ results, total_pages: totalPages }) => {\n    const movieBlocksData = results.map((el) => {\n      const img = el.poster_path == null ? '' : this.urlImageDB + el.poster_path;\n\n      const movieData = {\n        id: el.id,\n        title: el.title,\n        overview: el.overview,\n        date: el.release_date,\n        img,\n        vote: `${el.vote_average}`,\n        rating: el.rating,\n        genreIds: el.genre_ids,\n      };\n\n      return movieData;\n    });\n\n    return { movieBlocksData, totalPages };\n  };\n\n  getMovies = async (query, page = 1) => {\n    if ((typeof query === 'string' || query instanceof String) && query.length > 0) {\n      return fetch(this.createSearchMoviesURL(query, page))\n        .then((responce) => responce.json())\n        .then((json) => this.prepareMoviesJson(json));\n    }\n    return { movieBlocksData: [], totalPages: 0 };\n  };\n\n  createGuestSession = async () => {\n    return fetch(`${this.url}/authentication/guest_session/new?api_key=${this.apiKey}`)\n      .then((response) => response.json())\n      .then(({ guest_session_id: id }) => id);\n  };\n\n  rateMovie = async (guestSessionId, id, vote) => {\n    const rateUrl = `${this.url}/movie/${id}/rating?api_key=${this.apiKey}`;\n\n    fetch(`${rateUrl}&guest_session_id=${guestSessionId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({\n        value: Number(vote),\n      }),\n    });\n  };\n\n  getRatedMovies = async (guestSessionId) => {\n    return fetch(`${this.url}/guest_session/${guestSessionId}/rated/movies?api_key=${this.apiKey}`)\n      .then((response) => response.json())\n      .then((json) => this.prepareMoviesJson(json));\n  };\n\n  getGenreList = async () => {\n    return fetch(`${this.url}/genre/movie/list?api_key=${this.apiKey}`).then((response) =>\n      response.json()\n    );\n  };\n}\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport 'normalize.css';\nimport './app.css';\nimport 'antd/dist/antd.css';\nimport { Spin, Alert } from 'antd';\nimport MoviePage from '../movie-page';\nimport MoviesService from '../../services/movies-service';\nimport { MoviesServiceProvider } from '../movies-service-context';\nimport { GenreListProvider } from '../genre-list-context';\n\nexport default class App extends React.Component {\n  moviesService = new MoviesService();\n\n  genreList = null;\n\n  state = {\n    loading: true,\n    guestSessionId: '',\n    error: false,\n    errorMessage: '',\n  };\n\n  componentDidMount() {\n    Promise.all([\n      this.moviesService.createGuestSession().then((id) => this.setState({ guestSessionId: id })),\n\n      this.moviesService.getGenreList().then(({ genres }) => {\n        this.genreList = genres.reduce((acc, { id, name }) => acc.set(id, name), new Map());\n      }),\n    ])\n      .then(() => this.setState({ loading: false }))\n      .catch((error) =>\n        this.setState({\n          error: true,\n          errorMessage: error.message,\n        })\n      );\n  }\n\n  render() {\n    const { loading, guestSessionId, error, errorMessage } = this.state;\n    const content = (\n      <div className=\"main-wrapper\">\n        <GenreListProvider value={this.genreList}>\n          <MoviesServiceProvider value={this.moviesService}>\n            <MoviePage guestSessionId={guestSessionId} />\n          </MoviesServiceProvider>\n        </GenreListProvider>\n      </div>\n    );\n    const spin = (\n      <div className=\"loading-wrapper\">\n        <Spin tip=\"loading...\" />\n      </div>\n    );\n    const errorAlert = (\n      <Alert\n        style={{ marginTop: '50px', marginBottom: '100px' }}\n        message=\"Error:\"\n        description={errorMessage}\n        type=\"error\"\n        showIcon\n      />\n    );\n    const contentOrSpin = loading ? spin : content;\n\n    return error ? errorAlert : contentOrSpin;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}